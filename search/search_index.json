{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u9996\u9875","text":"<p>\u672c\u6559\u7a0b\u7684\u76ee\u7684\u662f\u5e2e\u52a9\u4f60\u5feb\u901f\u4e86\u89e3\u82af\u7247\u8bbe\u8ba1\u6d41\u7a0b\u4e2d\u4e00\u4e9b\u5e38\u89c1\u7684\u5de5\u5177\u3002</p>"},{"location":"#_2","title":"\u76ee\u5f55","text":"<ul> <li>Chisel</li> <li>Makefile</li> <li>Verilator</li> <li>GDB</li> </ul>"},{"location":"#_3","title":"\u66f4\u65b0\u65e5\u5fd7","text":""},{"location":"#_4","title":"\u5f53\u524d\u7248\u672c","text":"<p>v0.1\uff1a\u6700\u521d\u7248\u672c</p>"},{"location":"#_5","title":"\u5386\u53f2\u7248\u672c","text":"<p>\u6682\u65e0</p>"},{"location":"Chisel/","title":"Chisel","text":""},{"location":"Chisel/#_1","title":"\u4ecb\u7ecd","text":"<p>Chisel\u662f\u4e00\u4e2a\u786c\u4ef6\u6784\u5efa\u8bed\u8a00\uff08Hardware Construct Language\uff09\uff0c\u5b83\u662fScala\u7684\u4e00\u4e2a\u5e93\u3002Chisel\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5229\u7528Scala\u7684\u5f3a\u5927\u7279\u6027\uff0c\u540c\u65f6\u53c8\u80fd\u591f\u751f\u6210\u9ad8\u6548\u7684\u786c\u4ef6\u63cf\u8ff0\u3002Chisel\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u5c06\u786c\u4ef6\u63cf\u8ff0\u770b\u4f5c\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u6837\u53ef\u4ee5\u5229\u7528Scala\u7684\u51fd\u6570\u5f0f\u7279\u6027\u6765\u63cf\u8ff0\u786c\u4ef6\u3002</p>"},{"location":"Chisel/#_2","title":"\u57fa\u672c\u7ec4\u6210","text":""},{"location":"Chisel/#_3","title":"\u6570\u636e\u7c7b\u578b","text":"<p>Chisel \u6709\u4e09\u79cd\u6570\u636e\u7ed3\u6784\uff1a<code>Bits</code>\uff0c<code>UInt</code> \u548c <code>SInt</code>\u3002 \u8fd9\u4e09\u79cd\u6570\u636e\u7ed3\u6784\u90fd\u8868\u793a\u4e00\u4e2a\u6bd4\u7279\u5411\u91cf\uff08vector of bits\uff09\u3002 <code>Bits</code> \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c<code>UInt</code> \u548c <code>SInt</code> \u662f <code>Bits</code> \u7684\u5b50\u7c7b\u3002 \u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528 <code>Bits</code>\u3002</p> <pre><code>Bits (8.W)      // 8-bit vector of bits\nUInt (8.W)      // 8-bit unsigned integer\nSInt (10.W)     // 10-bit signed integer\n</code></pre> <p>Chisel \u4f7f\u7528 <code>Width</code> \u7c7b\u578b\u6765\u8868\u793a\u6bd4\u7279\u5411\u91cf\u7684\u957f\u5ea6\u3002 <code>n.W</code> \u5c06 Scala \u6574\u6570 <code>n</code> \u8f6c\u6362\u4e3a Chisel \u7684 <code>Width</code> \u7c7b\u578b\u3002</p> <p>\u5982\u4e0b\u662f\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u5b9e\u4f8b\uff1a</p> <pre><code>0.U                 // defines a UInt constant of 0\n-3.S                // defines a SInt constant of -3\n3.U(4.W)            // An 4-bit constant of 3\n\n\"hff\".U             // hexadecimal representation of 255\n\"o377\".U            // octal representation of 255\n\" b1111_1111 \".U    // binary representation of 255, the underscore is ignored\n</code></pre> <p>\uff01\uff01\uff01\u6ce8\u610f\uff1a\u5b9a\u4e49\u5bbd\u5ea6\u65f6\u4e0d\u80fd\u9057\u6f0f <code>.W</code>\u3002 <code>1.U(32)</code> \u4e0d\u4f1a\u5b9a\u4e49\u8868\u793a 1 \u7684 32 \u4f4d\u5bbd\u5e38\u91cf\u3002\u76f8\u53cd\uff0c\u8868\u8fbe\u5f0f (32) \u88ab\u89e3\u91ca\u4e3a\u7b2c32\u4f4d\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7ed3\u679c\u662f 0\u3002</p> <p>Chisel \u4f1a\u81ea\u52a8\u63a8\u65ad\u5e38\u91cf\u7684\u5bbd\u5ea6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u4f4d\u5bbd\uff0c\u90a3\u4e48 Chisel \u4f1a\u9ed8\u8ba4\u4f7f\u7528\u80fd\u8868\u793a\u8be5\u5e38\u6570\u7684\u6700\u5c0f\u4f4d\u5bbd\u3002 \u4f8b\u5982\uff0c<code>3.U</code> \u4f1a\u88ab\u63a8\u65ad\u4e3a <code>3.U(2.W)</code>\uff0c\u56e0\u4e3a 3 \u53ef\u4ee5\u7528 2 \u4f4d\u8868\u793a\u3002 \u5c3d\u7ba1 Chisel \u4f1a\u63a8\u65ad\u4fe1\u53f7\u548c\u5bc4\u5b58\u5668\u6240\u9700\u7684\u4f4d\u5bbd\uff0c\u4f46\u5728\u521b\u5efa\u786c\u4ef6\u5bf9\u8c61\u65f6\u6307\u5b9a\u9884\u671f\u7684\u4f4d\u5bbd\u5ea6\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e60\u60ef\u3002</p> <p>\u4e3a\u4e86\u8868\u793a\u903b\u8f91\u503c\uff0cChisel \u5b9a\u4e49\u4e86 <code>Bool</code> \u7c7b\u578b\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c06 Scala \u5e03\u5c14\u5e38\u91cf true \u548c false \u8f6c\u6362\u4e3a Chisel <code>Bool</code> \u5e38\u91cf\u3002</p> <pre><code>true.B\nfalse.B\n</code></pre>"},{"location":"Chisel/#_4","title":"\u7ec4\u5408\u903b\u8f91","text":"<pre><code>val logic = (a &amp; b) | c\n</code></pre> <p>\u8be5\u7535\u8def\u53ef\u4ee5\u7528\u4e8e\u5411\u91cf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e0e AND \u548c OR \u7535\u8def\u7ec4\u5408\u7684 Wire\u3002</p> <p>\u8fd0\u7b97\u7684\u7ed3\u679c\u5bbd\u5ea6\u662f\u52a0\u6cd5\u548c\u51cf\u6cd5\u8fd0\u7b97\u7b26\u7684\u6700\u5927\u5bbd\u5ea6\u3001\u4e58\u6cd5\u7684\u4e24\u4e2a\u5bbd\u5ea6\u4e4b\u548c\uff0c\u901a\u5e38\u662f\u9664\u6cd5\u548c\u6a21\u8fd0\u7b97\u7684\u5206\u5b50\u5bbd\u5ea6\u3002</p> <p>\u4fe1\u53f7\u4e5f\u53ef\u4ee5\u9996\u5148\u5b9a\u4e49\u4e3a\u67d0\u79cd\u7c7b\u578b\u7684 <code>Wire</code>\u3002 \u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>:=</code> \u66f4\u65b0\u8fd0\u7b97\u7b26\uff08update operator\uff09\u8d4b\u503c\u3002</p> <pre><code>val w = Wire(UInt())\nw := a &amp; b\n</code></pre> <p>\u6570\u636e\u7684\u622a\u53d6\u3001\u62fc\u63a5\u3001\u6269\u5c55\u7b49\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <pre><code>val sign = x(31)                    // sign bit of x\nval lowByte = largeWord (7, 0)      // low byte of largeWord\nval word = highByte ## lowByte      // concatenation, the same as Cat(highByte, lowByte)\n</code></pre> <p>Chisel \u63d0\u4f9b\u4e86\u591a\u9009\u5668\u7684\u62bd\u8c61\uff1a</p> <pre><code>val result = Mux(sel, a, b)\n</code></pre> <p>\u5f53 <code>sel</code>\u4e3a <code>true.B</code> \u65f6\u9009\u62e9 a\uff0c\u5426\u5219\u9009\u62e9b\u3002<code>sel</code> \u7684\u7c7b\u578b\u662f Chisel <code>Bool</code>\uff1b\u8f93\u5165 a \u548c b \u53ef\u4ee5\u662f\u4efb\u4f55 Chisel \u57fa\u672c\u7c7b\u578b\u6216\u805a\u5408\uff08\u675f\u6216\u5411\u91cf\uff09\uff08aggregate such as bundles and vectors\uff09\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u76f8\u540c\u7c7b\u578b\u5373\u53ef\u3002</p>"},{"location":"Chisel/#_5","title":"\u5bc4\u5b58\u5668","text":"<p>Chisel \u4e2d\u7684\u5bc4\u5b58\u5668\u9690\u5f0f\u8fde\u63a5\u5230\u5168\u5c40\u65f6\u949f\u5e76\u5728\u4e0a\u5347\u6cbf\u66f4\u65b0 \u5f53\u5728\u5bc4\u5b58\u5668\u58f0\u660e\u4e2d\u63d0\u4f9b\u521d\u59cb\u5316\u503c\u65f6\uff0c\u5b83\u4f7f\u7528\u8fde\u63a5\u5230\u5168\u5c40\u590d\u4f4d\u4fe1\u53f7\u7684\u540c\u6b65\u590d\u4f4d\u3002</p> <pre><code>val reg = RegInit(0.U(8.W))    // 8-bit register, initialized with 0 at reset\nreg := d                        // connect an input to the register\nval q = reg                     // the output of the register can be used just with the name in an expression\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u5bc4\u5b58\u5668\u7684\u65f6\u5019\u6307\u5b9a\u5176\u8f93\u5165\uff1a</p> <pre><code>val nextReg = RegNext(d)        // register with next value of d\n</code></pre> <p>\u540c\u65f6\u6307\u5b9a\u521d\u59cb\u503c\u548c\u8f93\u5165\uff1a</p> <pre><code>val bothReg = RegNext(d, 0.U)   // register with next value of d, initialized with 0\n</code></pre> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u8ba1\u6570\u5668\u5b9e\u4f8b\uff1a</p> <pre><code>val cntReg = RegInit (0.U(8.W))\ncntReg := Mux(cntReg === 9.U, 0.U, cntReg + 1.U)\n</code></pre>"},{"location":"Chisel/#bundle-vec","title":"Bundle \u548c Vec \u7ed3\u6784","text":"<p>Chisel \u63d0\u4f9b\u4e86\u4e24\u79cd\u805a\u5408\uff08aggregate\uff09\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u591a\u4e2a\u4fe1\u53f7\uff1a<code>Bundle</code> \u548c <code>Vec</code>\u3002 <code>Bundle</code> \u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u4fe1\u53f7\u5206\u7ec4\u4e3a\u547d\u540d\u5b57\u6bb5\u3002 <code>Vec</code> \u8868\u793a\u76f8\u540c\u7c7b\u578b\u7684\u4fe1\u53f7\uff08\u5143\u7d20\uff09\u7684\u53ef\u7d22\u5f15\u96c6\u5408\u3002</p>"},{"location":"Chisel/#bundle","title":"Bundle","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a <code>Bundle</code> \u7c7b\u7684\u7ee7\u627f\uff0c\u5e76\u5c06\u5b57\u6bb5\u5217\u4e3a\u6784\u9020\u51fd\u6570\u5757\u4e2d\u7684 val\u3002 \u8981\u4f7f\u7528 bundle\uff0c\u6211\u4eec\u4f7f\u7528 <code>new</code> \u521b\u5efa\u5b83\u5e76\u5c06\u5176\u5c01\u88c5\u5230 <code>Wire</code> \u4e2d\u3002 \u4f7f\u7528<code>.</code>\u7b26\u53f7\u8bbf\u95ee\u8fd9\u4e9b\u5b57\u6bb5\u3002</p> <pre><code>class Channel() extends Bundle {\n    val data     = UInt(32.W)\n    val valid    = Bool()\n}\n\nval ch    = Wire(new Channel())\nch.data  := 3.U\nch.valid := true.B\n\nval b     = ch.valid\n\nval channel = ch    // A bundle can be referenced as a whole\n</code></pre> <p>\u70b9\u8868\u793a\u6cd5\uff08dot notation\uff09\u5728\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u5f88\u5e38\u89c1\uff0c\u5176\u4e2d <code>x.y</code> \u8868\u793a <code>x</code> \u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c<code>y</code> \u662f\u8be5\u5bf9\u8c61\u7684\u5b57\u6bb5\u3002</p>"},{"location":"Chisel/#vec","title":"Vec","text":""},{"location":"Chisel/#combinational-vec","title":"Combinational Vec","text":"<p><code>Vec</code> \u662f\u901a\u8fc7\u8c03\u7528\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u7684\uff1a\u5143\u7d20\u7684\u6570\u91cf\u548c\u5143\u7d20\u7684\u7c7b\u578b\u3002Combinational Vec \u9700\u8981\u5c01\u88c5\u6210 <code>Wire</code>\u3002 \u901a\u8fc7\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5404\u4e2a\u5143\u7d20\uff0c\u5c01\u88c5\u5728 <code>Wire</code> \u4e2d\u7684 <code>Vec</code> \u53ea\u662f\u4e00\u4e2a\u591a\u8def\u590d\u7528\u5668\uff08multiplexer\uff09\u3002</p> <pre><code>val v = Wire(Vec(3, UInt (4.W)))\n\nv(0) := 1.U\nv(1) := 3.U\nv(2) := 5.U\n\nval index = 1.U(2.W)\nval a = v(index)\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>VecInit</code> \u8bbe\u7f6e <code>Vec</code> \u7684\u9ed8\u8ba4\u503c\u3002</p> <pre><code>val defVec = VecInit (1.U(3.W), 2.U, 3.U)\nval defVecSig = VecInit(d, e, f)\n</code></pre>"},{"location":"Chisel/#register-vec","title":"Register Vec","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>Vec</code> \u6765\u5b9a\u4e49\u5bc4\u5b58\u5668\u6570\u7ec4\u3002</p> <pre><code>val registerFile = Reg(Vec (32, UInt (32.W)))\nregisterFile(index) := dIn\nval dOut = registerFile(index)\n</code></pre> <p>\u5411\u91cf\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u88ab\u521d\u59cb\u5316\u3002 \u521d\u59cb\u5316\u7684\u503c\u8fd9\u5c31\u662f\u5bc4\u5b58\u5668\u590d\u4f4d\u7684\u503c\u3002 \u4e3a\u4e86\u521d\u59cb\u5316\u5bc4\u5b58\u5668\u6587\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528\u5e26\u6709\u521d\u59cb\u503c\u7684 <code>VecInit</code>\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u5230 <code>RegInit</code> \u4e2d\u3002</p> <pre><code>val initReg = RegInit(VecInit (0.U(3.W), 1.U, 2.U))\nval resetVal = initReg(sel)\ninitReg (0) := d\ninitReg (1) := e\ninitReg (2) := f\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u60f3\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u6240\u6709\u5143\u7d20\u91cd\u7f6e\u4e3a\u76f8\u540c\u7684\u503c\uff08\u53ef\u80fd\u662f 0\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Scala \u5e8f\u5217 <code>Seq</code>\u3002 <code>Seq</code> \u5305\u542b\u4e00\u4e2a\u521b\u5efa\u51fd\u6570 <code>fill</code>\uff0c\u7528\u4e8e\u7528\u76f8\u540c\u7684\u503c\u521d\u59cb\u5316\u5e8f\u5217\u3002 <code>VecInit</code> \u53ef\u4ee5\u4f7f\u7528\u5305\u542b Chisel \u7c7b\u578b\u7684 <code>Seq</code> \u6765\u6784\u9020\u3002</p> <pre><code>val resetRegFile =\n    RegInit(VecInit(Seq.fill (32) (0.U(32.W))))   // 32-bit register file, initialized with 0\nval rdRegFile = resetRegFile(sel)\n</code></pre>"},{"location":"Chisel/#bundle-vec_1","title":"Bundle \u548c Vec \u7ed3\u5408","text":"<pre><code>val vecBundle = Wire(Vec(8, new Channel()))\n\nclass BundleVec extends Bundle {\nval field  = UInt(8.W)\nval vector = Vec(4, UInt(8.W))\n}\n</code></pre> <p>\u5f53\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u6709\u590d\u4f4d\u503c\u7684 <code>Bundle</code> \u7c7b\u578b\u7684\u5bc4\u5b58\u5668\u65f6\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u8be5 <code>Bundle</code> \u7684 <code>Wire</code>\uff0c\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u5404\u4e2a\u5b57\u6bb5\uff0c\u7136\u540e\u5c06\u6b64 <code>Bundle</code> \u4f20\u9012\u7ed9 <code>RegInit</code>\u3002</p> <pre><code>val initVal    = Wire(new Channel ())\ninitVal.data  := 0.U\ninitVal.valid := false.B\nval channelReg = RegInit(initVal)\n</code></pre> <p>\uff01\uff01\uff01\u6ce8\u610f\uff0c\u90e8\u5206\u8d4b\u503c\u5728 Chisel \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\u3002</p> <pre><code>val assignWord      = Wire(UInt(16.W))\nassignWord (7, 0)  := lowByte           // WRONG!!!\nassignWord (15, 8) := highByte          // WRONG!!!\n</code></pre> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u4f7f\u7528 <code>Bundle</code> \u7c7b\u578b\u3002</p> <pre><code>val assignWord = Wire(UInt(16.W))\n\nclass Split extends Bundle {\nval high = UInt (8.W)\nval low = UInt (8.W)\n}\n\nval split   = Wire(new Split())\nsplit.low  := lowByte\nsplit.high := highByte\nassignWord := split.asUInt()    // casting that bundle with asUInt() to a UInt\n</code></pre> <p>\u8be5\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u9700\u8981\u77e5\u9053 <code>Bundle</code> \u5b57\u6bb5\u4ee5\u4f55\u79cd\u987a\u5e8f\u5408\u5e76\u5230\u5355\u4e2a\u5411\u91cf\u3002</p>"},{"location":"Chisel/#wire-reg-io","title":"Wire, Reg \u548c IO","text":"<p><code>UInt</code>\u3001<code>SInt</code> \u548c <code>Bits</code> \u662f Chisel \u7c7b\u578b\uff0c\u5b83\u4eec\u672c\u8eab\u5e76\u4e0d\u4ee3\u8868\u786c\u4ef6\u3002 \u5c06\u5b83\u4eec\u5c01\u88c5\u5230 <code>Wire</code>\u3001<code>Reg</code> \u6216 <code>IO</code> \u4e2d\u624d\u80fd\u751f\u6210\u786c\u4ef6\u3002 <code>Wire</code> \u4ee3\u8868\u7ec4\u5408\u903b\u8f91\uff0c<code>Reg</code> \u4ee3\u8868\u5bc4\u5b58\u5668\uff08D \u89e6\u53d1\u5668\u7684\u96c6\u5408\uff09\uff0c<code>IO</code> \u4ee3\u8868\u6a21\u5757\u7684\u8fde\u63a5\uff08\u7535\u8def\u7684\u5f15\u811a\uff09\u3002 \u4efb\u4f55 Chisel \u7c7b\u578b\u90fd\u53ef\u4ee5\u5c01\u88c5\u5728 <code>Wire</code>\u3001<code>Reg</code> \u6216 <code>IO</code> \u4e2d\u3002</p> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7 Scala \u4e0d\u53ef\u53d8\u53d8\u91cf\u6765\u521b\u5efa\u4e00\u4e2a\u786c\u4ef6\u3002 \u4f7f\u7528 Chisel \u8fd0\u7b97\u7b26 <code>:=</code> \u5c06\u503c\u6216\u8868\u8fbe\u5f0f\u5206\u914d\uff08\u6216\u91cd\u65b0\u5206\u914d\uff09\u5230 <code>Wire</code>\u3001<code>Reg</code> \u6216 <code>IO</code>\u3002</p> <pre><code>val number = Wire(UInt())\nval reg    = Reg(SInt())\n\nnumber    := 10.U\nreg       := value - 3.U\n</code></pre> <p>\u8bf7\u6ce8\u610f Scala \u8d4b\u503c\u8fd0\u7b97\u7b26 \u201c=\u201d \u548c Chisel \u8fd0\u7b97\u7b26 \u201c:=\u201d \u4e4b\u95f4\u7684\u7ec6\u5fae\u5dee\u522b\u3002 \u521b\u5efa\u786c\u4ef6\u5bf9\u8c61\uff08\u5e76\u4e3a\u5176\u547d\u540d\uff09\u65f6\u4f7f\u7528 Scala \u7684 \u201c=\u201d \u8fd0\u7b97\u7b26\uff0c\u4f46\u5728\u4e3a\u73b0\u6709\u786c\u4ef6\u5bf9\u8c61\u5206\u914d\u6216\u91cd\u65b0\u5206\u914d\u503c\u65f6\u4f7f\u7528 Chisel \u7684 \u201c:=\u201d \u8fd0\u7b97\u7b26\u3002</p> <p>\u5728\u7ec4\u5408\u5206\u652f\u903b\u8f91\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u5206\u914d\u7ec4\u5408\u503c\uff0c\u4f46\u9700\u8981\u5728\u6761\u4ef6\u7684\u6bcf\u4e2a\u5206\u652f\u4e2d\u5206\u914d\u5b83\u4eec\uff0c\u5426\u5219\u4f1a\u63cf\u8ff0\u4e00\u4e2a\u9501\u5b58\u5668\uff0cChisel \u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002 \u6700\u597d\u7684\u529e\u6cd5\u662f\u5728\u521b\u5efa <code>Wire</code> \u65f6\u5b9a\u4e49\u9ed8\u8ba4\u503c\u3002</p> <pre><code>val number = WireDefault (10.U(4.W))\n</code></pre>"},{"location":"Chisel/#_6","title":"\u6a21\u5757","text":""},{"location":"Chisel/#module","title":"Module \u7c7b","text":"<p>\u786c\u4ef6\u7ec4\u4ef6\uff08hardware components\uff09\u5728 Chisel \u4e2d\u79f0\u4e3a\u6a21\u5757\uff08module\uff09\u3002 \u6bcf\u4e2a\u6a21\u5757\u90fd\u7ee7\u627f\u81ea\u7c7b <code>Module</code> \u5e76\u7528 <code>io</code> \u5b57\u6bb5\u8868\u793a\u63a5\u53e3\u3002 \u63a5\u53e3\u7531 <code>Bundle</code> \u5b9a\u4e49\uff0c\u5e76\u88ab\u5c01\u88c5\u5728 <code>IO()</code> \u4e2d\u3002 <code>Bundle</code> \u4e2d\u5305\u542b\u8868\u793a\u6a21\u5757\u8f93\u5165\u548c\u8f93\u51fa\u7aef\u53e3\u7684\u5b57\u6bb5\u3002 \u901a\u8fc7\u5c06\u5b57\u6bb5\u5c01\u88c5\u5230 <code>Input()</code> \u6216 <code>Output()</code> \u4e2d\u6765\u5b9a\u4e49\u65b9\u5411\u3002 \u65b9\u5411\u662f\u4ece\u6a21\u5757\u672c\u8eab\u7684\u89d2\u5ea6\u6765\u770b\u7684\u3002</p> <pre><code>// an adder\n\nclass Adder extends Module {\n    val io = IO(new Bundle {\n        val a = Input(UInt(4.W))\n        val b = Input(UInt(4.W))\n        val sum = Output(UInt(4.W))\n    })\n\n    io.sum := io.a + io.b\n}\n\n// a register\n\nclass Register extends Module {\n    val io = IO(new Bundle {\n        val d = Input(UInt (8.W))\n        val q = Output(UInt (8.W))\n    })\n\n    val reg = RegInit (0.U)\n    reg := io.d\n    io.q := reg\n}\n</code></pre> <p>\u7531\u4e0a\u8ff0\u52a0\u6cd5\u5668\u548c\u5bc4\u5b58\u5668\u6a21\u5757\u7ec4\u6210\u7684\u8ba1\u6570\u5668\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>class Count10 extends Module {\n    val io = IO(new Bundle {\n        val dout = Output(UInt(8.W))\n    })\n\n    val add = Module(new Adder())\n    val reg = Module(new Register())\n\n    // the register output\n    val count = reg.io.q\n\n    // connect the adder\n    add.io.a := 1.U\n    add.io.b := count\n    val result = add.io.y\n\n    // connect the Mux and the register input\n    val next = Mux(count === 9.U, 0.U, result)\n    reg.io.d := next\n\n    io.dout := count\n}\n</code></pre> <p>\u901a\u8fc7\u4f7f\u7528 <code>new</code> \u6765\u5b9e\u4f8b\u5316\u6a21\u5757\uff0c\u5e76\u5c06\u5b83\u5c01\u88c5\u5230 <code>Module()</code> \u4e2d\u3002</p>"},{"location":"Chisel/#_7","title":"\u5b9e\u7528\u529f\u80fd","text":""},{"location":"Chisel/#switch","title":"switch","text":"<p><code>switch</code> \u51fd\u6570\u662f\u4e00\u4e2a\u591a\u8def\u9009\u62e9\u5668\uff0c\u5b83\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e <code>switch</code> \u8bed\u53e5\u3002</p> <pre><code>class Alu extends Module {\n    val io = IO(new Bundle {\n        val a = Input(UInt(16.W))\n        val b = Input(UInt(16.W))\n        val fn = Input(UInt(2.W))\n        val y = Output(UInt(16.W))\n    })\n\n    // some default value is needed\n    io.y := 0.U\n\n    // The ALU selection\n    switch(io.fn) {\n    is(0.U) { io.y := io.a + io.b }\n    is(1.U) { io.y := io.a - io.b }\n    is(2.U) { io.y := io.a | io.b }\n    is(3.U) { io.y := io.a &amp; io.b }\n    }\n}\n</code></pre> <p>\u8981\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u5bfc\u5165\u4e00\u4e2aChisel\u5305\uff1a<code>import chisel3.util._</code></p>"},{"location":"Chisel/#bulk-connections","title":"Bulk Connections","text":"<p>\u4e3a\u4e86\u8fde\u63a5\u5177\u6709\u591a\u4e2a IO \u7aef\u53e3\u7684\u6a21\u5757\uff0cChisel \u63d0\u4f9b\u4e86\u6279\u91cf\u8fde\u63a5\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code>\u3002 Chisel \u4f1a\u5c06 <code>io</code> \u5b57\u6bb5\u4e2d\u540d\u79f0\u76f8\u540c\u7684\u7aef\u53e3\u8fde\u63a5\u8d77\u6765\u3002 \u5982\u679c\u6ca1\u6709\u5339\u914d\u7684\u540d\u79f0\uff0c\u90a3\u4e48\u8be5\u7aef\u53e3\u4f1a\u60ac\u7a7a\u3002</p> <pre><code>class Fetch extends Module {\n    val io = IO(new Bundle {\n        val instr = Output(UInt(32.W))\n        val pc = Output(UInt(32.W))\n    })\n    // ... Implementation of fetch\n}\n\nclass Decode extends Module {\n    val io = IO(new Bundle {\n        val instr = Input(UInt(32.W))\n        val pc = Input(UInt(32.W))\n        val aluOp = Output(UInt(5.W))\n        val regA = Output(UInt(32.W))\n        val regB = Output(UInt(32.W))\n    })\n    // ... Implementation of decode\n}\n\nval fetch = Module(new Fetch ())\nval decode = Module(new Decode ())\n\nfetch.io &lt;&gt; decode.io\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5b50\u6a21\u5757\u7684\u7aef\u53e3\u4e0e\u7236\u6a21\u5757\u8fde\u63a5\u3002</p> <pre><code>io &lt;&gt; execute.io\n</code></pre>"},{"location":"Chisel/#chisel","title":"\u5185\u5d4c\u975e Chisel \u4ee3\u7801","text":"<p>Verilog \u63cf\u8ff0\u7684\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7 <code>ExtModule</code> \u548c <code>BlackBox</code> \u7c7b\u5185\u5d4c\u5728 Chisel \u4e2d\u3002</p> <p>\u4e24\u8005\u90fd\u53ef\u4ee5\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u4f7f\u7528 <code>Map[String, Param]</code> \uff0c\u5b83\u4eec\u5728\u751f\u6210\u7684 Verilog \u4ee3\u7801\u4e2d\u8868\u793a\u6a21\u5757\u7684\u53c2\u6570\u3002</p> <pre><code>class BUFGCE extends BlackBox(Map(\"SIM_DEVICE\" -&gt; \"7SERIES\")) {\n    val io = IO(new Bundle {\n        val I = Input(Clock())\n        val CE = Input(Bool())\n        val O = Output(Clock())\n    })\n}\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 <code>Map(\"SIM_DEVICE\" -&gt; \"7SERIES\")</code> \u751f\u6210\u7684 Verilog \u4ee3\u7801\u4e3a <code>parameter SIM_DEVICE = \"7SERIES\"</code>\u3002</p>"},{"location":"Chisel/#extmodule","title":"ExtModule","text":"<p><code>ExtModules</code> \u5145\u5f53\u5360\u4f4d\u7b26\uff0c\u5176\u751f\u6210\u7684 Verilog \u4ee3\u7801\u662f\u6a21\u5757\u7684\u5b9e\u4f8b\u5316\uff08\u4e0d\u4f1a\u751f\u6210\u6a21\u5757\u7684\u5b9a\u4e49\uff09\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u4f7f\u7528 <code>ExtModule</code> \u6765\u8868\u793a FPGA \u4e0a\u7684 IP\u3002</p>"},{"location":"Chisel/#blackbox","title":"BlackBox","text":"<pre><code>class BlackBoxAdderIO extends Bundle {\n    val a = Input(UInt(32.W))\n    val b = Input(UInt(32.W))\n    val cin = Input(Bool())\n    val c = Output(UInt(32.W))\n    val cout = Output(Bool())\n}\n\nclass PathBlackBoxAdder extends HasBlackBoxPath {\n    val io = IO(new BlackBoxAdderIO)\n    addPath(\"./src/main/resources/ PathBlackBoxAdder.v\")\n}\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 <code>addPath</code> \u51fd\u6570\u6307\u5b9a\u4e86 Verilog \u6a21\u5757\u7684\u8def\u5f84\u3002</p> <p>\u6ce8\u610f\uff0c<code>HasBlackBoxPath</code> \u662f <code>BlackBox</code> \u7c7b\u7684\u7279\u5f81\uff08trait\uff09\uff0c\u8fd9\u610f\u5473\u7740 <code>class Example extends BlackBox with HasBlackBoxInline</code> \u7b49\u4ef7\u4e8e <code>class Example extends HasBlackBoxInline</code>.</p>"},{"location":"GDB/","title":"GDB","text":""},{"location":"GDB/#_1","title":"\u67e5\u770b\u5185\u5b58\u4e2d\u7684\u6570\u636e","text":"<p>\u5728 GDB \u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 x \u547d\u4ee4\u6765\u67e5\u770b\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002x \u547d\u4ee4\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u8981\u67e5\u770b\u7684\u5185\u5b58\u5730\u5740\u548c\u683c\u5f0f\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <ul> <li><code>x/10b 0x12345</code>\uff1a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u67e5\u770b\u5730\u5740 0x12345 \u5f00\u59cb\u7684 10 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002</li> <li><code>x/10h 0x12345</code>\uff1a\u4ee5\u534a\u5b57\uff082 \u5b57\u8282\uff09\u4e3a\u5355\u4f4d\uff0c\u67e5\u770b\u5730\u5740 0x12345 \u5f00\u59cb\u7684 10 \u4e2a\u534a\u5b57\u7684\u5185\u5bb9\u3002</li> <li><code>x/10w 0x12345</code>\uff1a\u4ee5\u5b57\uff084 \u5b57\u8282\uff09\u4e3a\u5355\u4f4d\uff0c\u67e5\u770b\u5730\u5740 0x12345 \u5f00\u59cb\u7684 10 \u4e2a\u5b57\u7684\u5185\u5bb9\u3002</li> <li><code>x/10g 0x12345</code>\uff1a\u4ee5\u5de8\u5b57\uff088 \u5b57\u8282\uff09\u4e3a\u5355\u4f4d\uff0c\u67e5\u770b\u5730\u5740 0x12345 \u5f00\u59cb\u7684 10 \u4e2a\u5de8\u5b57\u7684\u5185\u5bb9\u3002</li> <li><code>x/i</code>\uff1a\u4e00\u79cd\u7279\u6b8a\u7684\u683c\u5f0f\uff0c\u7528\u4e8e\u5c06\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u89e3\u91ca\u4e3a\u673a\u5668\u6307\u4ee4\u3002i \u4ee3\u8868 \"instruction\"\uff0c\u5373\u6307\u4ee4\u3002\u4f8b\u5982\uff0c<code>x/i $pc</code> \u8fd9\u6761\u547d\u4ee4\u4f1a\u663e\u793a\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u5f53\u524d\u6307\u5411\u7684\u673a\u5668\u6307\u4ee4\u3002</li> </ul>"},{"location":"GDB/#_2","title":"\u67e5\u770b\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e","text":"<ul> <li> <p>\u4f7f\u7528 x \u547d\u4ee4\u6765\u67e5\u770b\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c<code>x/1w $sp</code> \u4f1a\u663e\u793a\u6808\u6307\u9488\uff08SP\uff09\u5f53\u524d\u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\u7684\u5185\u5bb9\u3002</p> </li> <li> <p>\u4f7f\u7528 info registers \u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u5bc4\u5b58\u5668\u7684\u5f53\u524d\u503c\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u663e\u793a\u6240\u6709\u901a\u7528\u5bc4\u5b58\u5668\u548c\u4e00\u4e9b\u7279\u6b8a\u5bc4\u5b58\u5668\uff08\u5982\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09\u7684\u503c\u3002</p> </li> <li> <p><code>info all-registers</code> \u5217\u51fa\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5305\u62ec\u901a\u7528\u5bc4\u5b58\u5668\uff08\u5982x0\u5230x31\uff09\uff0c\u7279\u6743\u6a21\u5f0f\u5bc4\u5b58\u5668\uff08\u5982mstatus\u3001mcause\u7b49\uff09\uff0c\u4ee5\u53ca\u5176\u4ed6CSR\u5bc4\u5b58\u5668\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u53ea\u60f3\u67e5\u770b\u67d0\u4e2a\u7279\u5b9a\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 print \u547d\u4ee4\u3002\u4f8b\u5982\uff0c<code>print $r0</code> \u4f1a\u663e\u793a r0 \u5bc4\u5b58\u5668\u7684\u503c\uff08\u5728 ARM \u67b6\u6784\u4e2d\uff09\u3002</p> </li> </ul>"},{"location":"GDB/#_3","title":"\u5199\u5165\u5185\u5b58\u6216\u5bc4\u5b58\u5668","text":"<ul> <li>\u4f7f\u7528 set \u547d\u4ee4\u6765\u5199\u5165\u5185\u5b58\u3002\u4f8b\u5982\uff0c<code>set {int}0x12345 = 0</code> \u4f1a\u5c06\u5730\u5740 0x12345 \u5904\u7684 4 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3a 0\uff0c<code>set {int}0x54321 = 0xabcdf</code> \u4f1a\u5c06\u5730\u5740 0x54321 \u5904\u7684 4 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3a 16 \u8fdb\u5236\u7684 abcdf\u3002</li> <li>\u4f7f\u7528 set \u547d\u4ee4\u6765\u5199\u5165\u5bc4\u5b58\u5668\u3002\u4f8b\u5982\uff0c<code>set $r0 = 0</code> \u4f1a\u5c06 r0 \u5bc4\u5b58\u5668\u7684\u503c\u8bbe\u7f6e\u4e3a 0\u3002</li> <li>\u4f7f\u7528 set \u547d\u4ee4\u6765\u5199\u5165\u7279\u6b8a\u5bc4\u5b58\u5668\u3002\u4f8b\u5982\uff0c<code>set $pc = 0x12345</code> \u4f1a\u5c06\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u7684\u503c\u8bbe\u7f6e\u4e3a 0x12345\u3002/x \u7528\u4e8e16\u8fdb\u5236\u683c\u5f0f\uff0c/d \u7528\u4e8e\u5341\u8fdb\u5236\u683c\u5f0f\u7b49</li> </ul> <p>ROM\uff08\u53ea\u8bfb\u5b58\u50a8\u5668\uff09\u662f\u4e00\u79cd\u53ea\u80fd\u8bfb\u53d6\u4e0d\u80fd\u5199\u5165\u7684\u5b58\u50a8\u5668\u3002 \u5982\u679c\u4f60\u8bd5\u56fe\u5728 GDB \u4e2d\u4f7f\u7528 set \u547d\u4ee4\u5199\u5165 ROM \u5730\u5740\u7684\u6570\u636e\uff0cGDB \u53ef\u80fd\u4e0d\u4f1a\u663e\u793a\u9519\u8bef\uff0c\u4f46\u5b9e\u9645\u4e0a\u6570\u636e\u5e76\u6ca1\u6709\u88ab\u5199\u5165 ROM\u3002 \u5f53\u4f60\u4f7f\u7528 x \u547d\u4ee4\u8bfb\u53d6\u8be5\u5730\u5740\u65f6\uff0cGDB \u53ef\u80fd\u4f1a\u663e\u793a\u4f60\u4e4b\u524d\u5c1d\u8bd5\u5199\u5165\u7684\u6570\u636e\uff0c\u4f46\u8fd9\u53ea\u662f GDB \u5185\u90e8\u72b6\u6001\u7684\u4e00\u90e8\u5206\uff0c\u4e0d\u4ee3\u8868\u5b9e\u9645\u7684\u786c\u4ef6\u72b6\u6001\u3002 \u5728\u771f\u5b9e\u7684\u786c\u4ef6\u4e2d\uff0cROM \u7684\u5185\u5bb9\u5728\u5199\u5165\u540e\u5c31\u4e0d\u80fd\u66f4\u6539\u3002</p>"},{"location":"Makefile/","title":"Makefile","text":""},{"location":"Makefile/#_1","title":"\u8d4b\u503c","text":"<p>\u5728 Makefile \u4e2d\uff0c= \u7528\u4e8e\u5b9a\u4e49\u9012\u5f52\u53d8\u91cf\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u7684\u503c\u5728\u6bcf\u6b21\u4f7f\u7528\u65f6\u90fd\u4f1a\u91cd\u65b0\u8ba1\u7b97\u3002 \u8fd9\u5728\u4f60\u9700\u8981\u5728\u53d8\u91cf\u7684\u503c\u4e2d\u4f7f\u7528\u5176\u4ed6\u53d8\u91cf\uff0c\u5e76\u4e14\u5e0c\u671b\u8fd9\u4e9b\u53d8\u91cf\u5728\u4f7f\u7528\u65f6\u624d\u88ab\u8ba1\u7b97\u65f6\u975e\u5e38\u6709\u7528\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6709\u4e24\u4e2a\u53d8\u91cf <code>VAR1</code> \u548c <code>VAR2</code>\uff0c\u4f60\u5e0c\u671b <code>VAR2</code> \u7684\u503c\u4f9d\u8d56\u4e8e <code>VAR1</code> \u7684\u5f53\u524d\u503c\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u8fd9\u4e24\u4e2a\u53d8\u91cf\uff1a</p> <pre><code>VAR1 = value1\nVAR2 = $(VAR1)\n</code></pre> <p>\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728\u540e\u7eed\u7684\u4ee3\u7801\u4e2d\u6539\u53d8 <code>VAR1</code> \u7684\u503c\uff0c<code>VAR2</code> \u7684\u503c\u4f1a\u968f\u4e4b\u6539\u53d8\uff1a</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u4f60\u6253\u5370 <code>VAR2</code> \u7684\u503c\uff0c\u4f60\u4f1a\u770b\u5230 <code>value2</code>\uff0c\u800c\u4e0d\u662f <code>value1</code>\u3002\u8fd9\u662f\u56e0\u4e3a <code>VAR2</code> \u7684\u503c\u5728\u6bcf\u6b21\u4f7f\u7528\u65f6\u90fd\u4f1a\u91cd\u65b0\u8ba1\u7b97\uff0c\u6240\u4ee5\u5b83\u603b\u662f\u7b49\u4e8e <code>VAR1</code> \u7684\u5f53\u524d\u503c\u3002</p> <p>\u5982\u679c\u4f60\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f7f\u7528 <code>:=</code> \u800c\u4e0d\u662f <code>=</code>\uff0c<code>VAR2</code> \u7684\u503c\u5728\u5b9a\u4e49\u65f6\u5c31\u88ab\u8ba1\u7b97\u51fa\u6765\uff0c\u6240\u4ee5\u65e0\u8bba <code>VAR1</code> \u5982\u4f55\u6539\u53d8\uff0c<code>VAR2</code> \u7684\u503c\u90fd\u4e0d\u4f1a\u6539\u53d8\u3002</p>"},{"location":"Makefile/#_2","title":"\u51fd\u6570","text":"<ul> <li><code>$(filter-out pattern\u2026,text)</code>\uff1a\u4ece text \u4e2d\u8fc7\u6ee4\u6389\u4e0e pattern \u5339\u914d\u7684\u5355\u8bcd\u3002</li> <li><code>$(wildcard pattern)</code>\uff1a\u8fd4\u56de\u4e0e pattern \u5339\u914d\u7684\u6240\u6709\u6587\u4ef6\u540d\u3002\u6ce8\u610f\uff0c\u8be5\u51fd\u6570\u4e0d\u4f1a\u9012\u5f52\u5bfb\u627e\uff01</li> <li><code>$(addprefix prefix, names\u2026)</code>\uff1a\u5728 names \u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\u524d\u9762\u6dfb\u52a0 prefix\u3002</li> <li></li> </ul>"},{"location":"Verilator/","title":"Verilator","text":""},{"location":"Verilator/#verilator-testbench","title":"\u6700\u57fa\u672c\u7684 Verilator testbench","text":""},{"location":"Verilator/#_1","title":"\u5934\u6587\u4ef6","text":"<pre><code>#include &lt;verilated.h&gt;\n#include &lt;verilated_vcd_c.h&gt;\n#include \"V&lt;DUT&gt;.h\"\n#include \"V&lt;DUT&gt;___024unit.h\"\n</code></pre> <ul> <li><code>&lt;verilated.h&gt;</code>\uff1aVerilator \u7684\u5934\u6587\u4ef6\u3002</li> <li><code>&lt;verilated_vcd_c.h&gt;</code>\uff1aVerilator \u7684\u6ce2\u5f62\u6587\u4ef6\u5934\u6587\u4ef6\u3002</li> <li><code>V&lt;DUT&gt;.h</code>\uff1aVerilator \u751f\u6210\u7684\u6a21\u5757\u5934\u6587\u4ef6\u3002</li> <li><code>V&lt;DUT&gt;___024unit.h</code>\uff1aVerilator \u751f\u6210\u7684\u6a21\u5757\u5185\u90e8\u5355\u5143\u5934\u6587\u4ef6\u3002</li> </ul>"},{"location":"Verilator/#_2","title":"\u8bbe\u7f6e\u6700\u5927\u4eff\u771f\u65f6\u95f4","text":"<pre><code>#define MAX_SIM_TIME 20\nvluint64_t sim_time = 0;\n</code></pre>"},{"location":"Verilator/#_3","title":"\u4e3b\u51fd\u6570\u6846\u67b6","text":"<pre><code>int main(int argc, char** argv, char** env) {\n    Valu *dut = new V&lt;DUT&gt;;\n\n    Verilated::traceEverOn(true);\n    VerilatedVcdC *m_trace = new VerilatedVcdC;\n    dut-&gt;trace(m_trace, 5);\n    m_trace-&gt;open(\"waveform.vcd\");\n\n    /* &lt;...&gt; */\n\n    m_trace-&gt;close();\n    delete dut;\n    exit(EXIT_SUCCESS);\n}\n</code></pre> <p><code>Valu *dut = new V&lt;DUT&gt;;</code> \u5b9e\u4f8b\u5316\u4e86\u6d4b\u8bd5\u6a21\u5757\u3002 <code>m_trace</code>\u5bf9\u8c61\u7528\u4e8e\u8bb0\u5f55\u6ce2\u5f62\uff0c\u5e76\u901a\u8fc7<code>dut-&gt;trace(m_trace, 5);</code>\u5c06\u6ce2\u5f62\u8bb0\u5f55\u5230<code>m_trace</code>\u5bf9\u8c61\u4e2d\u3002 \u53c2\u6570<code>5</code>\u4ee3\u8868\u4e86\u8bb0\u5f555\u4e2a\u5c42\u7ea7\u7684\u6ce2\u5f62\u3002</p>"},{"location":"Verilator/#_4","title":"\u4eff\u771f\u5faa\u73af","text":"<pre><code>while (sim_time &lt; MAX_SIM_TIME) {\n    dut-&gt;clk ^= 1;\n    dut-&gt;eval();\n    m_trace-&gt;dump(sim_time);\n    sim_time++;\n}\n</code></pre> <p>\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u9996\u5148\u5c06\u65f6\u949f\u4fe1\u53f7\u53d6\u53cd\uff0c\u4ece\u800c\u4ea7\u751f\u65f6\u949f\u6fc0\u52b1\u3002 <code>dut-&gt;eval();</code>\u7528\u4e8e\u66f4\u65b0\u6a21\u5757\u7684\u72b6\u6001\u3002 <code>m_trace-&gt;dump(sim_time);</code>\u5c06\u5f53\u524d\u65f6\u523b\u7684\u6ce2\u5f62\u8bb0\u5f55\u5230<code>m_trace</code>\u5bf9\u8c61\u4e2d\u3002</p>"},{"location":"Verilator/#_5","title":"\u7f16\u8bd1\u6307\u4ee4","text":"<pre><code>$ verilator -Wall --trace -cc &lt;DUT&gt;.sv --exe tb_&lt;DUT&gt;.cpp\n</code></pre> <ul> <li><code>-Wall</code>\uff1a\u5f00\u542f\u6240\u6709\u8b66\u544a\u3002</li> <li><code>--trace</code>\uff1a\u5f00\u542f\u6ce2\u5f62\u8bb0\u5f55\u3002</li> <li><code>-cc</code>\uff1a\u751f\u6210 C++ \u6a21\u5757\u3002</li> <li><code>--exe</code>\uff1atestbench\u5bf9\u5e94\u7684\u6e90\u6587\u4ef6\u3002</li> </ul> <pre><code>$ make -C obj_dir -f V&lt;DUT&gt;.mk V&lt;DUT&gt;\n</code></pre> <ul> <li><code>-C</code>\uff1a\u6307\u5b9a\u7f16\u8bd1\u76ee\u5f55\u3002</li> <li><code>-f</code>\uff1a\u6307\u5b9a\u7f16\u8bd1\u7684Makefile\u3002</li> <li><code>V&lt;DUT&gt;</code>\uff1a\u7f16\u8bd1\u76ee\u6807\u3002</li> </ul> <pre><code>$ ./obj_dir/V&lt;DUT&gt;\n</code></pre> <p>\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u751f\u6210\u6ce2\u5f62\uff0c\u5b8c\u6210\u4eff\u771f\u3002</p>"}]}